{"version":3,"sources":["serviceWorker.js","login/login.js","signup/style.js","signup/signup.js","chatList/style.js","chatList/chatList.js","dashboard/style.js","chatview/styles.js","chatview/chatView.js","chattextbox/styles.js","chattextbox/chattextbox.js","newChat/styles.js","newChat/newChat.js","dashboard/dashboard.js","index.js"],"names":["Boolean","window","location","hostname","match","firebase","require","LoginComponent","useState","Email","setEmail","Password","setPassword","loginError","setloginError","userTyping","type","e","target","value","history","useReactRouter","className","CssBaseline","Paper","Typography","component","variant","onSubmit","preventDefault","auth","signInWithEmailAndPassword","then","push","err","console","log","submitLogin","FormControl","required","fullWidth","margin","InputLabel","htmlFor","Input","autoComplete","autoFocus","id","onChange","Button","color","to","styles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","form","submit","hasAccountHeader","logInLink","textDecoration","fontWeight","errorText","textAlign","SignupComponent","formIsValid","state","password","passwordConfirmation","setState","email","subimitSignup","createUserWithEmailAndPassword","authRes","userObj","user","firestore","collection","doc","set","props","authErr","signupError","dbErr","classes","this","htnlFor","autoFoucus","React","Component","withStyles","root","backgroundColor","palette","background","height","position","left","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","top","right","ChatListaComponent","newChat","newChatBtnFn","selectChat","index","selectChatFn","chats","length","onClick","List","map","_chat","_index","key","ListItem","selected","selectedChatIndex","ListItemAvatar","Avatar","alt","users","filter","_user","userEmail","split","ListItemText","primary","secondary","undefined","messages","message","substring","Divider","signOutBtn","bottom","content","overflow","boxSizing","overflowY","userSent","float","clear","wordWrap","friendSent","chatHeader","fontSize","paddingTop","ChatViewComponent","componentDidMount","container","document","getElementById","scrollTo","scrollHeight","componentDidUpdate","chat","_usr","_msg","sender","sendBtn","chatTextBoxContainer","chatTextBox","ChatTextComponent","keyCode","submitMessage","chatText","messageValid","txt","replace","submitMessageFn","userClickedInput","TextField","placeholder","onKeyUp","onFocus","input","NewChatComponent","username","submitNewChat","a","userExists","chatExists","goToChat","createChat","newChatSubmitFn","sendTo","goToChatFn","buildDocKey","currentUser","sort","join","docKey","get","exists","usersSnapshot","docs","_doc","data","includes","serverError","DashbordComponent","signOut","chatIndex","newChatFormVisible","msg","update","FieldValue","arrayUnion","receiverHasRead","usersInChat","find","every","indexOf","friend","newChatBtnClicked","newChatSubmit","chatObj","componentWillMount","onAuthStateChanged","where","onSnapshot","res","friends","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","routing","path","DashboardComponent","exact","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0dba002e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React,{useState} from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport {Link} from 'react-router-dom';\nimport \"./style.css\";\nimport useReactRouter from'use-react-router'\nconst firebase = require(\"firebase\")\n\nconst LoginComponent =() =>{\n    const [Email,setEmail] = useState('') \n    const [Password,setPassword] = useState('')\n    const [loginError,setloginError] = useState(false)\n\n    const userTyping = (type,e) =>{\n        switch(type){\n            case 'email':\n                    setEmail(e.target.value);\n                break;\n            \n            case 'password':\n                    setPassword(e.target.value);\n                break;\n            default:\n            break;\n        }\n    }\n    const { history } = useReactRouter();\n\n    const submitLogin = (e) =>{\n        e.preventDefault();\n        firebase\n         .auth()\n         .signInWithEmailAndPassword(Email, Password)\n         .then(() =>{\n            history.push('/dashboard')\n         },err=>{\n            setloginError(true);\n             console.log(err)\n         })\n        }\n\n        \nreturn (\n    <main className=\"main\">\n        <CssBaseline></CssBaseline>\n        <Paper className=\"paper\">\n            <Typography component=\"h1\" variant='h5'>Log In!</Typography>\n            <form className=\"form\" onSubmit={(e) =>submitLogin(e)}>\n                <FormControl required fullWidth margin='nomal'>\n                    <InputLabel htmlFor='login-email-input'>\n                        Enter Your Email!\n                    </InputLabel>\n                    <Input autoComplete='email' value={Email} autoFocus id=\"login-email-input\" onChange={(e) =>userTyping('email',e)}></Input>\n                </FormControl>\n                <FormControl required fullWidth margin='nomal'>\n                    <InputLabel htmlFor='login-password-input'>\n                        Enter Your Password\n                    </InputLabel>\n                    <Input type='password'value={Password} autoComplete='email' autoFocus id=\"login-password-input\" onChange={(e) =>userTyping('password',e)}></Input>\n                </FormControl>\n                <Button type='submit' fullWidth variant='contained' color='primary' className=\"submit\">\n                    Log In\n                </Button>\n            </form>\n            {\n                loginError ?\n                <Typography className=\"errortext\" component=\"h5\" variant=\"h6\">\n                    Incorrect Login Information\n                </Typography> :\n                null\n            }\n            <Typography component=\"h5\" variant=\"h6\" className=\"noAccountHeader\">Don't Have An Account?</Typography>\n            <Link className=\"signUpLink\" to=\"/signup\">Sign Up!</Link>\n        </Paper>\n    </main>\n)\n}\n\n\nexport default LoginComponent;","const styles = theme => ({\n    main: {\n      width: 'auto',\n      display: 'block', // Fix IE 11 issue.\n      marginLeft: theme.spacing.unit * 3,\n      marginRight: theme.spacing.unit * 3,\n      [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n        width: 400,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    },\n    paper: {\n      marginTop: theme.spacing.unit * 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing.unit,\n    },\n    submit: {\n      marginTop: theme.spacing.unit * 3,\n    },\n    hasAccountHeader: {\n      width: '100%'\n    },\n    logInLink: {\n      width: '100%',\n      textDecoration: 'none',\n      color: '#303f9f',\n      fontWeight: 'bolder'\n    },\n    errorText: {\n      color: 'red',\n      textAlign: 'center'\n    }\n  });\n  \n  export default styles;","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './style';\nimport FormControl from '@material-ui/core/FormControl';\nimport {Link} from 'react-router-dom';\n\nconst firebase =require(\"firebase\")\nclass SignupComponent extends React.Component{\n\n    constructor(){\n        super();\n        this.state={\n            email:null,\n            password:null,\n            passwordConfirmation:null,\n            signupError:'There was an error'\n        }\n    }\n    render(){\n        const {classes} =this.props\n\n     \nreturn (\n    <main className={classes.main} >\n        <CssBaseline >\n            <Paper className={classes.paper}>\n                <Typography component=\"h1\" variant='h5'>\n                    Sign Up!\n                </Typography>\n                <form onSubmit={(e) =>this.subimitSignup(e)} className={classes.form}>\n                    <FormControl required fullWidth margin='nomal'>\n                        <InputLabel htnlFor='sinup-email-input'>\n                            Enter Youtr Email\n                        </InputLabel>\n                        <Input autoComplete='email' onChange={(e) => this.userTyping('email',e)} autoFoucus id='signup-email-input'>\n                        </Input>\n                    </FormControl>\n                    <FormControl required fullWidth margin='nomal'>\n                        <InputLabel htnlFor='sinup-password-input'>\n                           Create A Password\n                        </InputLabel>\n                        <Input type='password' autoComplete='email' onChange={(e) => this.userTyping('password',e)} autoFoucus id='sinup-password-input'>\n                        </Input>\n                    </FormControl>\n                    <FormControl required fullWidth margin='nomal'>\n                        <InputLabel htnlFor='sinup-password-confirmation-input'>\n                           Confirm Your Password\n                        </InputLabel>\n                        <Input type='password' autoComplete='email' onChange={(e) => this.userTyping('passwordConfirmation',e)} autoFoucus id='sinup-password-input'>\n                        </Input>\n                    </FormControl>\n                    <Button type='submit' fullWidth variant='contained' color=\"primary\" className={classes.submit}>\n                            SUBMIT\n                    </Button>\n                </form>\n                {\n                    this.state.signupError ?\n                    <Typography className={classes.errorText} component='h5' variant='h6' >\n                        {this.state.signupError}\n                    </Typography>:\n                    null\n                }\n                <Typography component='h5' variant='h6' className={classes.hasAccountHeader}>Already Have An Account?</Typography>\n                <Link className={classes.logInLink} to='/login'>Logi In!</Link>\n            </Paper>\n        </CssBaseline>\n    </main>\n)\n    }\n    formIsValid =() =>this.state.password === this.state.passwordConfirmation;\n\n    userTyping=(type ,e)=>{\n        switch(type){\n            case 'email':\n                this.setState({email:e.target.value});\n                break;\n\n            case 'password':\n                this.setState({password:e.target.value});\n                break;\n\n            case 'passwordConfirmation':\n                this.setState({passwordConfirmation:e.target.value});\n                break;\n\n                default:\n                break;\n        }\n    }\n    subimitSignup=(e) =>{\n        e.preventDefault();\n        if(!this.formIsValid()){\n            this.setState({signupError : 'Passwords do not match!'})\n            return;\n        }\n       firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email,this.state.password)\n        .then(authRes =>{\n            const userObj = {\n                email:authRes.user.email\n            };\n        firebase\n         .firestore()\n         .collection('users')\n         .doc(this.state.email)\n         .set(userObj)\n         .then(() =>{\n             this.props.history.push('/dashboard')\n         },authErr =>{\n             console.log(authErr)\n             this.setState({signupError:'Failed to add user'})\n         },dbErr =>{\n             console.log(dbErr)\n             this.setState({signupError:'Failed add user'})\n         })\n        })\n    }\n}\n\nexport default withStyles(styles)(SignupComponent);","const styles = theme => ({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      height: 'calc(100% - 35px)',\n      position: 'absolute',\n      left: '0',\n      width: '300px',\n      boxShadow: '0px 0px 2px black'\n    },\n    listItem: {\n      cursor: 'pointer'\n    },\n    newChatBtn: {\n      borderRadius: '0px'\n    },\n    unreadMessage: {\n      color: 'red',\n      position: 'absolute',\n      top: '0',\n      right: '5px'\n    }\n  });\n  \n  export default styles;","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styles from \"./style\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport NotificationImportant from \"@material-ui/icons/NotificationImportant\";\n\nclass ChatListaComponent extends React.Component {\n  render() {\n    const { classes } = this.props;\n    console.log(this.props.chats)\n    if (this.props.chats.length === 0 && this.props.chats === []) {\n      console.log(this.props.chats.length)\n      return(\n        <div>Loafding</div>\n      )\n    }else　if(this.props.chats.length > 0){\n      console.log(this.props.chats)\n      return (\n        <main className={classes.root}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            className={classes.newChatBtn}\n            onClick={this.newChat}\n          >\n              新しいメッセージ\n          </Button>\n          <List>\n            {this.props.chats.map((_chat, _index) => {\n              return (\n                <div key={_index}>\n                  <ListItem\n                    onClick={() => this.selectChat(_index)}\n                    className={classes.listItem}\n                    selected={this.props.selectedChatIndex === _index} \n                    alignItems=\"flex-start\"\n                  >\n                    <ListItemAvatar>\n                      <Avatar alt=\"Remy Sharp\">\n                        {\n                          _chat.users\n                            .filter(_user => _user !== this.props.userEmail)[0]\n                            .split(\"\")[0]\n                        }\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        _chat.users.filter(\n                          _user => _user !== this.props.userEmail\n                        )[0]\n                      }\n                      secondary={\n                        <Typography component=\"span\" color=\"textPrimary\">\n                         { \n                           _chat.messages === undefined ?\n                           null:\n                           _chat.messages[\n                            _chat.messages.length - 1\n                          ].message.substring(0, 30)\n                        }\n                        </Typography>\n                      }\n                    >\n                    </ListItemText>\n                  </ListItem>\n                  <Divider></Divider>\n                </div>\n              );\n            })}\n          </List>\n        </main>\n      );\n    }else{\n      return(\n        <main className={classes.root}>\n            <Button variant='contained'\n                fullWidth\n                color='primary'\n                onClick={this.newChat}\n                className={classes.newChatBtn}>\n                    おニューなメッセージ\n                </Button>\n                <List></List>\n        </main>\n    )\n    }\n  }\n  // userIsSender = (chat) => chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\n  newChat = () => {\n   this.props.newChatBtnFn()\n  };\n  selectChat = index => {\n    this.props.selectChatFn(index)\n  };\n}\nexport default withStyles(styles)(ChatListaComponent);\n","const styles = theme => ({\n    signOutBtn: {\n      position: 'absolute',\n      bottom: '0px',\n      left: '0px',\n      width: '300px',\n      borderRadius: '0px',\n      backgroundColor: '#227092',\n      height: '35px',\n      boxShadow: '0px 0px 2px black',\n      color: 'white'\n    }\n  });\n  \n  export default styles;","const styles = theme => ({\n\n  content: {\n    height: 'calc(100vh - 100px)',\n    overflow: 'auto',\n    padding: '25px',\n    marginLeft: '300px',\n    boxSizing: 'border-box',\n    overflowY: 'scroll',\n    top: '50px',\n    width: 'calc(100% - 300px)',\n    position: 'absolute'\n  },\n\n  userSent: {\n    float: 'left',\n    clear: 'both',\n    padding: '20px',\n    boxSizing: 'border-box',\n    wordWrap: 'break-word',\n    marginTop: '10px',\n    backgroundColor: '#707BC4',\n    color: 'white',\n    width: '300px',\n    borderRadius: '10px'\n  },\n\n  friendSent: {\n    float: 'right',\n    clear: 'both',\n    padding: '20px',\n    boxSizing: 'border-box',\n    wordWrap: 'break-word',\n    marginTop: '10px',\n    backgroundColor: '#707BC4',\n    color: 'white',\n    width: '300px',\n    borderRadius: '10px'\n  },\n\n  chatHeader: {\n    width: 'calc(100% - 301px)',\n    height: '50px',\n    backgroundColor: '#344195',\n    position: 'fixed',\n    marginLeft: '301px',\n    fontSize: '18px',\n    textAlign: 'center',\n    color: 'white',\n    paddingTop: '10px',\n    boxSizing: 'border-box'\n  }\n\n});\n\nexport default styles;","import React from 'react';\nimport styles from './styles';\nimport { withStyles } from '@material-ui/core/styles';\n\nclass ChatViewComponent extends React.Component {\n\n  componentDidMount = () => {\n    const container = document.getElementById('chatview-container');\n    if(container)\n      container.scrollTo(0, container.scrollHeight);\n  }\n  componentDidUpdate = () => {\n    const container = document.getElementById('chatview-container');\n    if(container)\n      container.scrollTo(0, container.scrollHeight);\n  }\n\n  render() {\n\n    const { classes } = this.props;\n    \n    if(this.props.chat === undefined) {\n      return(<main className={classes.content}>ここは僕のおごりで！</main>);\n    } else if(this.props.chat !== undefined && this.props.chat.messages !==undefined) {\n      return(\n        <div>\n          <div className={classes.chatHeader}>\n            Your conversation with {this.props.chat.users.filter(_usr => _usr !== this.props.user)[0]}\n          </div>\n          <main id='chatview-container' className={classes.content}>\n            {\n              this.props.chat.messages.map((_msg, _index) => {\n                return(\n                <div key={_index} className={_msg.sender === this.props.user ? classes.userSent : classes.friendSent}>\n                  {_msg.message}\n                </div>\n                )\n              })\n            }\n          </main>\n        </div>\n      );\n    } else {\n      return (<div className='chatview-container'>Loading...</div>);\n    }\n  }\n}\n\nexport default withStyles(styles)(ChatViewComponent);","const styles = theme => ({\n\n    sendBtn: {\n      color: 'blue',\n      cursor: 'pointer',\n      '&:hover': {\n        color: 'gray'\n      }\n    },\n  \n    chatTextBoxContainer: {\n      position: 'absolute',\n      bottom: '15px',\n      left: '315px',\n      boxSizing: 'border-box',\n      overflow: 'auto',\n      width: 'calc(100% - 300px - 50px)'\n    },\n  \n    chatTextBox: {\n      width: 'calc(100% - 25px)'\n    }\n  \n  });\n  \n  export default styles;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Send from '@material-ui/icons/Send';\nimport styles from './styles';\nimport { withStyles } from '@material-ui/core/styles';\n\nclass ChatTextComponent extends React.Component{\n\n    constructor(){\n        super();\n        this.state={\n            chatText:''\n        };\n    }\n\n    render(){\n        const {classes} = this.props\n        return(\n            <div className={classes.chatTextBoxContainer}>\n               <TextField \n               placeholder='Type!!!!!!!!!!!!!!!!!!!'\n               onKeyUp={(e) =>this.userTyping(e)}\n               id='chattextbox'\n               className={classes.chatTextBox}\n               onFocus={this.userClickedInput}\n               >\n               </TextField>\n               <Send onClick={this.submitMessage} className={classes.sendBtn}> \n               </Send>\n            </div>\n        )\n    }\n    userTyping = (e) =>{\n       e.keyCode === 13  ? this.submitMessage() : this.setState({chatText:e.target.value})\n       console.log(this.state.chatText)\n    }\n\n    messageValid = (txt) => txt && txt.replace(/\\s/g, '').length;\n    submitMessage = () => {\n        if(this.messageValid(this.state.chatText)) {\n            const {submitMessageFn} = this.props\n          const sub = submitMessageFn(this.state.chatText);\n          console.log('333')\n          console.log(submitMessageFn)\n          console.log('33is.state.chatText3')\n          document.getElementById('chattextbox').value = '';\n        }\n      }\n    userClickedInput = () =>console.log('change Input')\n\n}\nexport default withStyles(styles)(ChatTextComponent)","const styles = theme => ({\n    main: {\n      width: 'auto',\n      display: 'block', // Fix IE 11 issue.\n      marginLeft: theme.spacing() * 3,\n      marginRight: theme.spacing() * 3,\n      [theme.breakpoints.up(400 + theme.spacing() * 3 * 2)]: {\n        width: 400,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    },\n    paper: {\n      padding: `${theme.spacing() * 2}px ${theme.spacing() * 3}px ${theme.spacing() * 3}px`,\n      position: 'absolute',\n      width: '350px',\n      top: '50px',\n      left: 'calc(50% + 150px - 175px)'\n    },\n    input: {\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(),\n    },\n    submit: {\n      marginTop: theme.spacing() * 3\n    },\n    errorText: {\n      color: 'red',\n      textAlign: 'center'\n    }\n  });\n  \n  export default styles;\n  ","  \nimport React from 'react';\nimport { FormControl, InputLabel, Input, Button, Paper, withStyles, CssBaseline, Typography } from '@material-ui/core';\nimport styles from './styles';\nconst firebase = require(\"firebase\");\n\nclass NewChatComponent extends React.Component{\n\n    constructor(){\n        super();\n        this.state = {\n            username:null,\n            message:null\n        }\n    }\n\n    render(){\n        const {classes} = this.props\n        return (\n           <main className={classes.main}>\n               <CssBaseline>\n                   <Paper className={classes.paper}>\n                       <Typography component=\"h1\" variant=\"h5\">\n                            Send A Message\n                       </Typography>\n                       <form className={classes.form} onSubmit={(e) =>this.submitNewChat(e)}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"new-chat-username\">\n                                    Enter Your Friend's Email\n                                </InputLabel>\n                                <Input required\n                                className={classes.input}\n                                autoFocus\n                                onChange={(e) =>this.userTyping('username',e)}\n                                id='new-chat-username'\n                                >\n                                </Input>\n                            </FormControl>\n                            <FormControl fullWidth> \n                                <InputLabel htmlFor=\"new-chat-message\">\n                                    Enter Your Message\n                                </InputLabel>\n                                 <Input required\n                                className={classes.input}\n                                autoFocus\n                                onChange={(e) =>this.userTyping('message',e)}\n                                id='new-chat-message'\n                                ></Input>\n                                <Button fullWidth className={classes.submit} variant=\"contained\" color='primary' type=\"submit\"> Submit</Button>\n                            </FormControl>\n                       </form>\n                   </Paper>\n               </CssBaseline>\n           </main>\n        )\n    }\n\n    userTyping = (type,e) =>{\n        switch(type) {\n            case 'username':\n                this.setState({username:e.target.value})\n             break;\n            case 'message':\n                this.setState({message:e.target.value})\n             break;\n            default:\n            break\n        }\n    }\n    submitNewChat = async(e) =>{\n        e.preventDefault();\n        const userExists=  await this.userExists();\n        console.log(userExists)\n        if(userExists){\n            const chatExists = await this.chatExists();\n            chatExists ? this.goToChat () :this.createChat();\n        }\n    }\n\n    createChat = () =>{\n        this.props.newChatSubmitFn({\n            sendTo :this.state.username,\n            message:this.state.message\n        })\n    }\n\n    goToChat = () =>{\n        this.props.goToChatFn(\n            this.buildDocKey(),\n            this.state.message\n        )\n    }\n  \n    buildDocKey = () => [firebase.auth().currentUser.email, this.state.username].sort().join(':');\n\n    chatExists = async () =>{\n        const docKey = this.buildDocKey(); \n        const chat = await firebase\n         .firestore()\n         .collection('chats')\n         .doc(docKey)\n         .get();\n         console.log(2222)\n         console.log(chat.exists)\n         console.log(2222)\n         return chat.exists\n    }\n    userExists = async () => {\n        const usersSnapshot = await \n        firebase\n          .firestore()\n          .collection('users')\n          .get();\n        const exists = usersSnapshot\n          .docs\n            .map(_doc => _doc.data().email)\n            .includes(this.state.username);\n        this.setState({ serverError: !exists });\n        return exists;\n      }\n// }\n    }\nexport default withStyles(styles)(NewChatComponent);","import React from \"react\";\nimport ChatList from \"../chatList/chatList\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport styles from \"./style\";\nimport ChatViewComponent from '../chatview/chatView'\nimport ChatTextBox from '../chattextbox/chattextbox'\nimport NewChatComponent from '../newChat/newChat'\nconst firebase = require(\"firebase\");\nclass DashbordComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selectChat: null,\n      newChatFormVisible: false,\n      email: null,\n      chats: []\n    };\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <ChatList\n          history={this.props.history}\n          newChatBtnFn={this.newChatBtnClicked}\n          selectChatFn={this.selectChat}\n          chats={this.state.chats}                 \n          userEmail={this.state.email}                 \n        >                 \n          {\" \"}                 \n        </ChatList>                 \n        {                 \n            this.state.newChatFormVisible?                  \n            null:                 \n            <ChatViewComponent                 \n                user={this.state.email}                 \n                chat={this.state.chats[this.state.selectChat]}                 \n            ></ChatViewComponent>                 \n        }                 \n        {\n          this.state.selectChat !== null && !this.state.newChatFormVisible?\n          <ChatTextBox submitMessageFn={this.submitMessage}/>:null\n        }\n        {\n          this.state.newChatFormVisible ? <NewChatComponent goToChatFn={this.goToChat} newChatSubmitFn={this.newChatSubmit}></NewChatComponent>:null\n        }\n\n        <Button className={classes.signOutBtn} onClick={this.signOut}>\n          Sign Out\n        </Button>\n      </div>\n    );\n  }\n\n  signOut= () =>firebase.auth().signOut();\n\n  selectChat = chatIndex => {\n    this.setState({selectChat:chatIndex ,newChatFormVisible:false})\n    console.log({selectChat:chatIndex},chatIndex)\n  };\n\n  submitMessage = (msg) => {\n    console.log(1111)\n    console.log(this.state.newChatFormVisible)\n    console.log(1111)\n    const docKey = this.buildDocKey(this.state.chats[this.state.selectChat]\n      .users\n      .filter(_usr => _usr !== this.state.email)[0])\n      console.log(this.state.chats)\n        console.log(docKey) \n         console.log(2223)\n    firebase\n      .firestore()\n      .collection('chats')\n      .doc(docKey)\n      .update({\n        messages: firebase.firestore.FieldValue.arrayUnion({\n          message: msg,\n          sender: this.state.email\n        }),\n        receiverHasRead: false\n      });\n  }\n\n  goToChat = async (docKey, msg) =>{\n    const usersInChat = docKey.split(':')\n    const chat = this.state.chats.find(_chat => usersInChat.every(_user =>_chat.users.includes(_user)));\n    this.setState({newChatFormVisible:false})\n    await this.selectChat(this.state.chats.indexOf(chat));\n    this.submitMessage(msg)\n  }\n\n  buildDocKey = (friend) =>[friend,this.state.email].sort().join(':')\n\n  newChatBtnClicked = () =>\n    this.setState({ newChatFormVisible: true, selectChat: null });\n\n    newChatSubmit = async (chatObj) =>{\n      const docKey = this.buildDocKey(chatObj.sendTo);\n      await \n      firebase\n       .firestore()\n       .collection('chats')\n       .doc(docKey)\n       .set({\n         messages:[{\n           message:chatObj.message,\n           sender:this.state.email\n         }],\n         users:[this.state.email, chatObj.sendTo],\n         receiverHasRead :false\n       })\n       this.setState({newChatFormVisible:false});\n       this.selectChat(this.state.chats.length - 1)\n    }\n\n    componentWillMount = () => {\n      firebase.auth().onAuthStateChanged(async _usr => {\n　　　　　　　if(!_usr)\n                this.props.history.push('/login');\n        else {\n          await firebase\n            .firestore()\n            .collection('chats')\n            .where('users', 'array-contains', _usr.email)\n            .onSnapshot(async res => {\n              const chats = res.docs.map(_doc => _doc.data());\n              await this.setState({\n                email: _usr.email,\n                chats: chats,\n                friends: []\n              });\n            })\n        }\n    });\n  }\n}\n\nexport default withStyles(styles)(DashbordComponent);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {Route,BrowserRouter as Router} from 'react-router-dom';\nimport LoginComponent from './login/login';\nimport SignupComponent from './signup/signup';\nimport DashboardComponent from './dashboard/dashboard';\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\")\nfirebase.initializeApp({    \n  apiKey: \"AIzaSyDIG6JmlcIsDNAnoadqKW-1ow0QbAkESiQ\",\n  authDomain: \"chatapp-58172.firebaseapp.com\",\n  databaseURL: \"https://chatapp-58172.firebaseio.com\",\n  projectId: \"chatapp-58172\",\n  storageBucket: \"chatapp-58172.appspot.com\",\n  messagingSenderId: \"244788918445\",\n  appId: \"1:244788918445:web:d7a152d0fb46a0040eee24\",\n  measurementId: \"G-TXTXZWBQ2M\"\n});\n\nconst routing=(\n  <Router>\n    <div id='routing-container'>\n      <Route path='/login' component={LoginComponent} ></Route>\n      <Route path='/signup' component={SignupComponent} ></Route>\n      <Route path='/dashboard' component={DashboardComponent} ></Route>\n      <Route path='/' exact component={SignupComponent} ></Route>\n    </div>\n  </Router>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    {routing}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}