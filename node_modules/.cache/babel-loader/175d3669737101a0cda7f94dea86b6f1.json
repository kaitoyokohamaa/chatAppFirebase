{"ast":null,"code":"var _jsxFileName = \"/Users/yokohamakaito/Desktop/chat/src/login/login.js\";\nimport React, { useState } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './style';\nimport { Link } from 'react-router-dom';\n\nconst firebase = require(\"firebase\");\n\nconst LoginComponent = () => {\n  const [Email, setEmail] = useState('');\n  const [Password, setPassword] = useState('');\n  const [loginError, setloginError] = useState('');\n\n  const userTyping = (type, e) => {\n    switch (type) {\n      case 'email':\n        setEmail({\n          email: e.target.value\n        });\n        break;\n\n      case 'password':\n        setPassword({\n          password: e.target.value\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  submitLogin = e => {\n    e.preventDefault();\n    firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(() => {\n      this.props.history.push('/dashboard');\n    }, err => {\n      this.setState({\n        loginError: 'Servet error'\n      });\n      console.log(err);\n    });\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      className: classes.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Log In!\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.form,\n      onSubmit: e => submitLogin(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      fullWidth: true,\n      margin: \"nomal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"login-email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"Enter Your Email!\"), /*#__PURE__*/React.createElement(Input, {\n      autoComplete: \"email\",\n      value: Email,\n      autoFocus: true,\n      id: \"login-email-input\",\n      onChange: e => userTyping('email', e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      fullWidth: true,\n      margin: \"nomal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"login-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Enter Your Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      value: Password,\n      autoComplete: \"email\",\n      autoFocus: true,\n      id: \"login-password-input\",\n      onChange: e => userTyping('password', e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Log In\")), this.state.loginError ? /*#__PURE__*/React.createElement(Typography, {\n      className: classes.errortext,\n      component: \"h5\",\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Incorrect Login Information\") : null, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h5\",\n      variant: \"h6\",\n      className: classes.noAccountHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Don't Have An Account?\"), /*#__PURE__*/React.createElement(Link, {\n      className: classes.signUpLink,\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Sign Up!\")));\n  };\n};\n\nexport default withStyles(styles)(LoginComponent);","map":{"version":3,"sources":["/Users/yokohamakaito/Desktop/chat/src/login/login.js"],"names":["React","useState","FormControl","InputLabel","Input","Paper","withStyles","CssBaseline","Typography","Button","styles","Link","firebase","require","LoginComponent","Email","setEmail","Password","setPassword","loginError","setloginError","userTyping","type","e","email","target","value","password","submitLogin","preventDefault","auth","signInWithEmailAndPassword","state","then","props","history","push","err","setState","console","log","classes","main","paper","form","submit","errortext","noAccountHeader","signUpLink"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './style';\nimport {Link} from 'react-router-dom';\n\nconst firebase = require(\"firebase\")\n\nconst LoginComponent =() =>{\n    const [Email,setEmail] = useState('') \n    const [Password,setPassword] = useState('')\n    const [loginError,setloginError] = useState('')\n\n    const userTyping = (type,e) =>{\n        switch(type){\n            case 'email':\n                    setEmail({email:e.target.value});\n                break;\n            \n            case 'password':\n                    setPassword({password:e.target.value});\n                break;\n            default:\n            break;\n        }\n    }\n\n     submitLogin = (e) =>{\n        e.preventDefault();\n        firebase\n         .auth()\n         .signInWithEmailAndPassword(this.state.email, this.state.password)\n         .then(() =>{\n            this.props.history.push('/dashboard')\n         },err=>{\n             this.setState({loginError:'Servet error'});\n             console.log(err)\n         })\n\n        const {classes} = this.props\nreturn (\n    <main className={classes.main}>\n        <CssBaseline></CssBaseline>\n        <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant='h5'>Log In!</Typography>\n            <form className={classes.form} onSubmit={(e) =>submitLogin(e)}>\n                <FormControl required fullWidth margin='nomal'>\n                    <InputLabel htmlFor='login-email-input'>\n                        Enter Your Email!\n                    </InputLabel>\n                    <Input autoComplete='email' value={Email} autoFocus id=\"login-email-input\" onChange={(e) =>userTyping('email',e)}></Input>\n                </FormControl>\n                <FormControl required fullWidth margin='nomal'>\n                    <InputLabel htmlFor='login-password-input'>\n                        Enter Your Password\n                    </InputLabel>\n                    <Input type='password'value={Password} autoComplete='email' autoFocus id=\"login-password-input\" onChange={(e) =>userTyping('password',e)}></Input>\n                </FormControl>\n                <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n                    Log In\n                </Button>\n            </form>\n            {\n                this.state.loginError ?\n                <Typography className={classes.errortext} component=\"h5\" variant=\"h6\">\n                    Incorrect Login Information\n                </Typography> :\n                null\n            }\n            <Typography component=\"h5\" variant=\"h6\" className={classes.noAccountHeader}>Don't Have An Account?</Typography>\n            <Link className={classes.signUpLink} to=\"/signup\">Sign Up!</Link>\n        </Paper>\n    </main>\n)\n}\n  \n}\n\nexport default withStyles(styles)(LoginComponent)"]},"metadata":{},"sourceType":"module"}