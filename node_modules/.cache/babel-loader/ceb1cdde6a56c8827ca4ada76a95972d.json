{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yokohamakaito/Desktop/chatFirebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yokohamakaito/Desktop/chatFirebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/yokohamakaito/Desktop/chatFirebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yokohamakaito/Desktop/chatFirebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/yokohamakaito/Desktop/chatFirebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/yokohamakaito/Desktop/chatFirebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import ChatList from\"../chatList/chatList\";import{Button,withStyles}from\"@material-ui/core\";import styles from\"./style\";import ChatViewComponent from'../chatview/chatView';import ChatTextBox from'../chattextbox/chattextbox';import NewChatComponent from'../newChat/newChat';var firebase=require(\"firebase\");var DashbordComponent=/*#__PURE__*/function(_React$Component){_inherits(DashbordComponent,_React$Component);var _super=_createSuper(DashbordComponent);function DashbordComponent(){var _this;_classCallCheck(this,DashbordComponent);_this=_super.call(this);_this.signOut=function(){return firebase.auth().signOut();};_this.selectChat=function(chatIndex){_this.setState({selectChat:chatIndex,newChatFormVisible:false});console.log({selectChat:chatIndex},chatIndex);};_this.submitMessage=function(msg){console.log(1111);console.log(_this.state.newChatFormVisible);console.log(1111);var docKey=_this.buildDocKey(_this.state.chats[_this.state.selectChat].users.filter(function(_usr){return _usr!==_this.state.email;})[0]);console.log(_this.state.chats);console.log(docKey);console.log(2223);firebase.firestore().collection('chats').doc(docKey).update({messages:firebase.firestore.FieldValue.arrayUnion({message:msg,sender:_this.state.email}),receiverHasRead:false});};_this.goToChat=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(docKey,msg){var usersInChat,chat;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:usersInChat=docKey.split(':');chat=_this.state.chats.find(function(_chat){return usersInChat.every(function(_user){return _chat.users.includes(_user);});});_this.setState({newChatFormVisible:false});_context.next=5;return _this.selectChat(_this.state.chats.indexOf(chat));case 5:_this.submitMessage(msg);case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();_this.buildDocKey=function(friend){return[friend,_this.state.email].sort().join(':');};_this.newChatBtnClicked=function(){return _this.setState({newChatFormVisible:true,selectChat:null});};_this.newChatSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(chatObj){var docKey;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:docKey=_this.buildDocKey(chatObj.sendTo);_context2.next=3;return firebase.firestore().collection('chats').doc(docKey).set({messages:[{message:chatObj.message,sender:_this.state.email}],users:[_this.state.email,chatObj.sendTo],receiverHasRead:false});case 3:_this.setState({newChatFormVisible:false});_this.selectChat(_this.state.chats.length-1);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3){return _ref2.apply(this,arguments);};}();_this.componentWillMount=function(){firebase.auth().onAuthStateChanged(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_usr){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(_usr){_context4.next=4;break;}_this.props.history.push('/login');_context4.next=6;break;case 4:_context4.next=6;return firebase.firestore().collection('chats').where('users','array-contains',_usr.email).onSnapshot(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(res){var chats;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:chats=res.docs.map(function(_doc){return _doc.data();});_context3.next=3;return _this.setState({email:_usr.email,chats:chats,friends:[]});case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5){return _ref4.apply(this,arguments);};}());case 6:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref3.apply(this,arguments);};}());};_this.state={selectChat:null,newChatFormVisible:false,email:null,chats:[]};return _this;}_createClass(DashbordComponent,[{key:\"render\",value:function render(){var classes=this.props.classes;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ChatList,{history:this.props.history,newChatBtnFn:this.newChatBtnClicked,selectChatFn:this.selectChat,chats:this.state.chats,userEmail:this.state.email},\" \"),this.state.newChatFormVisible?null:/*#__PURE__*/React.createElement(ChatViewComponent,{user:this.state.email,chat:this.state.chats[this.state.selectChat]}),this.state.selectChat!==null&&!this.state.newChatFormVisible?/*#__PURE__*/React.createElement(ChatTextBox,{submitMessageFn:this.submitMessage}):null,this.state.newChatFormVisible?/*#__PURE__*/React.createElement(NewChatComponent,{goToChatFn:this.goToChat,newChatSubmitFn:this.newChatSubmit}):null,/*#__PURE__*/React.createElement(Button,{className:classes.signOutBtn,onClick:this.signOut},\"Sign Out\"));}}]);return DashbordComponent;}(React.Component);export default withStyles(styles)(DashbordComponent);","map":{"version":3,"sources":["/Users/yokohamakaito/Desktop/chatFirebase/src/dashboard/dashboard.js"],"names":["React","ChatList","Button","withStyles","styles","ChatViewComponent","ChatTextBox","NewChatComponent","firebase","require","DashbordComponent","signOut","auth","selectChat","chatIndex","setState","newChatFormVisible","console","log","submitMessage","msg","state","docKey","buildDocKey","chats","users","filter","_usr","email","firestore","collection","doc","update","messages","FieldValue","arrayUnion","message","sender","receiverHasRead","goToChat","usersInChat","split","chat","find","_chat","every","_user","includes","indexOf","friend","sort","join","newChatBtnClicked","newChatSubmit","chatObj","sendTo","set","length","componentWillMount","onAuthStateChanged","props","history","push","where","onSnapshot","res","docs","map","_doc","data","friends","classes","signOutBtn","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ChatList from \"../chatList/chatList\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport styles from \"./style\";\nimport ChatViewComponent from '../chatview/chatView'\nimport ChatTextBox from '../chattextbox/chattextbox'\nimport NewChatComponent from '../newChat/newChat'\nconst firebase = require(\"firebase\");\nclass DashbordComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selectChat: null,\n      newChatFormVisible: false,\n      email: null,\n      chats: []\n    };\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <ChatList\n          history={this.props.history}\n          newChatBtnFn={this.newChatBtnClicked}\n          selectChatFn={this.selectChat}\n          chats={this.state.chats}                 \n          userEmail={this.state.email}                 \n        >                 \n          {\" \"}                 \n        </ChatList>                 \n        {                 \n            this.state.newChatFormVisible?                  \n            null:                 \n            <ChatViewComponent                 \n                user={this.state.email}                 \n                chat={this.state.chats[this.state.selectChat]}                 \n            ></ChatViewComponent>                 \n        }                 \n        {\n          this.state.selectChat !== null && !this.state.newChatFormVisible?\n          <ChatTextBox submitMessageFn={this.submitMessage}/>:null\n        }\n        {\n          this.state.newChatFormVisible ? <NewChatComponent goToChatFn={this.goToChat} newChatSubmitFn={this.newChatSubmit}></NewChatComponent>:null\n        }\n\n        <Button className={classes.signOutBtn} onClick={this.signOut}>\n          Sign Out\n        </Button>\n      </div>\n    );\n  }\n\n  signOut= () =>firebase.auth().signOut();\n\n  selectChat = chatIndex => {\n    this.setState({selectChat:chatIndex ,newChatFormVisible:false})\n    console.log({selectChat:chatIndex},chatIndex)\n  };\n\n  submitMessage = (msg) => {\n    console.log(1111)\n    console.log(this.state.newChatFormVisible)\n    console.log(1111)\n    const docKey = this.buildDocKey(this.state.chats[this.state.selectChat]\n      .users\n      .filter(_usr => _usr !== this.state.email)[0])\n      console.log(this.state.chats)\n        console.log(docKey) \n         console.log(2223)\n    firebase\n      .firestore()\n      .collection('chats')\n      .doc(docKey)\n      .update({\n        messages: firebase.firestore.FieldValue.arrayUnion({\n          message: msg,\n          sender: this.state.email\n        }),\n        receiverHasRead: false\n      });\n  }\n\n  goToChat = async (docKey, msg) =>{\n    const usersInChat = docKey.split(':')\n    const chat = this.state.chats.find(_chat => usersInChat.every(_user =>_chat.users.includes(_user)));\n    this.setState({newChatFormVisible:false})\n    await this.selectChat(this.state.chats.indexOf(chat));\n    this.submitMessage(msg)\n  }\n\n  buildDocKey = (friend) =>[friend,this.state.email].sort().join(':')\n\n  newChatBtnClicked = () =>\n    this.setState({ newChatFormVisible: true, selectChat: null });\n\n    newChatSubmit = async (chatObj) =>{\n      const docKey = this.buildDocKey(chatObj.sendTo);\n      await \n      firebase\n       .firestore()\n       .collection('chats')\n       .doc(docKey)\n       .set({\n         messages:[{\n           message:chatObj.message,\n           sender:this.state.email\n         }],\n         users:[this.state.email, chatObj.sendTo],\n         receiverHasRead :false\n       })\n       this.setState({newChatFormVisible:false});\n       this.selectChat(this.state.chats.length - 1)\n    }\n\n    componentWillMount = () => {\n      firebase.auth().onAuthStateChanged(async _usr => {\n　　　　　　　if(!_usr)\n                this.props.history.push('/login');\n        else {\n          await firebase\n            .firestore()\n            .collection('chats')\n            .where('users', 'array-contains', _usr.email)\n            .onSnapshot(async res => {\n              const chats = res.docs.map(_doc => _doc.data());\n              await this.setState({\n                email: _usr.email,\n                chats: chats,\n                friends: []\n              });\n            })\n        }\n    });\n  }\n}\n\nexport default withStyles(styles)(DashbordComponent);"]},"metadata":{},"sourceType":"module"}