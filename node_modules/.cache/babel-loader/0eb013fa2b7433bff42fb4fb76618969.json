{"ast":null,"code":"var _jsxFileName = \"/Users/yokohamakaito/Desktop/chat/src/login/login.js\";\nimport React, { useState } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './style';\nimport { Link } from 'react-router-dom';\n\nconst firebase = require(\"firebase\");\n\nconst LoginComponent = () => {\n  const [email, setEmail] = useState('');\n  const [passwor, setPassword] = useState('');\n  const [loginError, setloginError] = useState('');\n  const {\n    classes\n  } = this.props;\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Log In!\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: e => this.submitLogin(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    fullWidth: true,\n    margin: \"nomal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"login-email-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"Enter Your Email!\"), /*#__PURE__*/React.createElement(Input, {\n    autoComplete: \"email\",\n    autoFocus: true,\n    id: \"login-email-input\",\n    onChange: e => this.userTyping('email', e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    fullWidth: true,\n    margin: \"nomal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"login-password-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"Enter Your Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    autoComplete: \"email\",\n    autoFocus: true,\n    id: \"login-password-input\",\n    onChange: e => this.userTyping('password', e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Log In\")), this.state.loginError ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.errortext,\n    component: \"h5\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Incorrect Login Information\") : null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h5\",\n    variant: \"h6\",\n    className: classes.noAccountHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Don't Have An Account?\"), /*#__PURE__*/React.createElement(Link, {\n    className: classes.signUpLink,\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Sign Up!\")));\n};\n\nuserTyping = (type, e) => {\n  switch (type) {\n    case 'email':\n      this.setState({\n        email: e.target.value\n      });\n      break;\n\n    case 'password':\n      this.setState({\n        password: e.target.value\n      });\n      break;\n\n    default:\n      break;\n  }\n};\n\nsubmitLogin = e => {\n  e.preventDefault();\n  firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(() => {\n    this.props.history.push('/dashboard');\n  }, err => {\n    this.setState({\n      loginError: 'Servet error'\n    });\n    console.log(err);\n  });\n};\n\nexport default withStyles(styles)(LoginComponent);","map":{"version":3,"sources":["/Users/yokohamakaito/Desktop/chat/src/login/login.js"],"names":["React","useState","FormControl","InputLabel","Input","Paper","withStyles","CssBaseline","Typography","Button","styles","Link","firebase","require","LoginComponent","email","setEmail","passwor","setPassword","loginError","setloginError","classes","props","main","paper","form","e","submitLogin","userTyping","submit","state","errortext","noAccountHeader","signUpLink","type","setState","target","value","password","preventDefault","auth","signInWithEmailAndPassword","then","history","push","err","console","log"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './style';\nimport {Link} from 'react-router-dom';\n\nconst firebase = require(\"firebase\")\n\nconst LoginComponent =() =>{\n    const [email,setEmail] = useState('') \n    const [passwor,setPassword] = useState('')\n     const [loginError,setloginError] = useState('')\n\n        const {classes} =this.props\nreturn (\n    <main className={classes.main}>\n        <CssBaseline></CssBaseline>\n        <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant='h5'>Log In!</Typography>\n            <form className={classes.form} onSubmit={(e) => this.submitLogin(e)}>\n                <FormControl required fullWidth margin='nomal'>\n                    <InputLabel htmlFor='login-email-input'>\n                        Enter Your Email!\n                    </InputLabel>\n                    <Input autoComplete='email' autoFocus id=\"login-email-input\" onChange={(e) =>this.userTyping('email',e)}></Input>\n                </FormControl>\n                <FormControl required fullWidth margin='nomal'>\n                    <InputLabel htmlFor='login-password-input'>\n                        Enter Your Password\n                    </InputLabel>\n                    <Input type='password' autoComplete='email' autoFocus id=\"login-password-input\" onChange={(e) =>this.userTyping('password',e)}></Input>\n                </FormControl>\n                <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n                    Log In\n                </Button>\n            </form>\n            {\n                this.state.loginError ?\n                <Typography className={classes.errortext} component=\"h5\" variant=\"h6\">\n                    Incorrect Login Information\n                </Typography> :\n                null\n            }\n            <Typography component=\"h5\" variant=\"h6\" className={classes.noAccountHeader}>Don't Have An Account?</Typography>\n            <Link className={classes.signUpLink} to=\"/signup\">Sign Up!</Link>\n        </Paper>\n    </main>\n)\n}\n    userTyping = (type,e) =>{\n        switch(type){\n            case 'email':\n                this.setState({email:e.target.value});\n                break;\n            \n            case 'password':\n                this.setState({password:e.target.value});\n                break;\n            default:\n            break;\n        }\n    }\n    submitLogin = (e) =>{\n        e.preventDefault();\n\n        firebase\n         .auth()\n         .signInWithEmailAndPassword(this.state.email, this.state.password)\n         .then(() =>{\n            this.props.history.push('/dashboard')\n         },err=>{\n             this.setState({loginError:'Servet error'});\n             console.log(err)\n         })\n\n\n    \n}\n\nexport default withStyles(styles)(LoginComponent)"]},"metadata":{},"sourceType":"module"}