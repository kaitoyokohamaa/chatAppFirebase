{"ast":null,"code":"var _jsxFileName = \"/Users/yokohamakaito/Desktop/chat/src/login/login.js\";\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './style';\nimport { Link } from 'react-router-dom';\n\nconst firebase = require(\"firebase\");\n\nclass LoginComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.userTyping = (type, e) => {\n      switch (type) {\n        case 'email':\n          this.setState({\n            email: e.target.value\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            password: e.target.value\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.submitLogin = e => {\n      e.preventDefault();\n      firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(() => {\n        this.props.history.push('/dashboard');\n      }, err => {\n        this.setState({\n          loginEError: 'Servet error'\n        });\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      email: null,\n      password: null,\n      loginError: ''\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      className: classes.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"Log In!\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.form,\n      onSubmit: e => this.submitLogin(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      fullWidth: true,\n      margin: \"nomal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"login-email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, \"Enter Your Email!\"), /*#__PURE__*/React.createElement(Input, {\n      autoComplete: \"email\",\n      autoFocus: true,\n      id: \"login-email-input\",\n      onChange: e => this.userTyping('email', e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      fullWidth: true,\n      margin: \"nomal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"login-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, \"Enter Your Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      autoComplete: \"email\",\n      autoFocus: true,\n      id: \"login-password-input\",\n      onChange: e => this.userTyping('password', e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"Log In\")), this.state.loginError ? /*#__PURE__*/React.createElement(Typography, {\n      className: classes.errortext,\n      component: \"h5\",\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Incorrect Login Information\") : null, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h5\",\n      variant: \"h6\",\n      className: classes.noAccountHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Don't Have An Account?\"), /*#__PURE__*/React.createElement(Link, {\n      className: classes.signUpLink,\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"Sign Up!\")));\n  }\n\n}\n\nexport default withStyles(styles)(LoginComponent);","map":{"version":3,"sources":["/Users/yokohamakaito/Desktop/chat/src/login/login.js"],"names":["React","FormControl","InputLabel","Input","Paper","withStyles","CssBaseline","Typography","Button","styles","Link","firebase","require","LoginComponent","Component","constructor","userTyping","type","e","setState","email","target","value","password","submitLogin","preventDefault","auth","signInWithEmailAndPassword","state","then","props","history","push","err","loginEError","console","log","loginError","render","classes","main","paper","form","submit","errortext","noAccountHeader","signUpLink"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './style';\nimport {Link} from 'react-router-dom';\n\nconst firebase = require(\"firebase\")\n\nclass LoginComponent extends React.Component{\n\n    constructor(){\n        super();\n        this.state ={\n            email:null,\n            password:null,\n            loginError:''\n        }\n    }\n\n    render(){\n        const {classes} =this.props\nreturn (\n    <main className={classes.main}>\n        <CssBaseline></CssBaseline>\n        <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant='h5'>Log In!</Typography>\n            <form className={classes.form} onSubmit={(e) => this.submitLogin(e)}>\n                <FormControl required fullWidth margin='nomal'>\n                    <InputLabel htmlFor='login-email-input'>\n                        Enter Your Email!\n                    </InputLabel>\n                    <Input autoComplete='email' autoFocus id=\"login-email-input\" onChange={(e) =>this.userTyping('email',e)}></Input>\n                </FormControl>\n                <FormControl required fullWidth margin='nomal'>\n                    <InputLabel htmlFor='login-password-input'>\n                        Enter Your Password\n                    </InputLabel>\n                    <Input type='password' autoComplete='email' autoFocus id=\"login-password-input\" onChange={(e) =>this.userTyping('password',e)}></Input>\n                </FormControl>\n                <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n                    Log In\n                </Button>\n            </form>\n            {\n                this.state.loginError ?\n                <Typography className={classes.errortext} component=\"h5\" variant=\"h6\">\n                    Incorrect Login Information\n                </Typography> :\n                null\n            }\n            <Typography component=\"h5\" variant=\"h6\" className={classes.noAccountHeader}>Don't Have An Account?</Typography>\n            <Link className={classes.signUpLink} to=\"/signup\">Sign Up!</Link>\n        </Paper>\n    </main>\n)\n}\n    userTyping = (type,e) =>{\n        switch(type){\n            case 'email':\n                this.setState({email:e.target.value});\n                break;\n            \n            case 'password':\n                this.setState({password:e.target.value});\n                break;\n            default:\n            break;\n        }\n    }\n    submitLogin = (e) =>{\n        e.preventDefault();\n\n        firebase\n         .auth()\n         .signInWithEmailAndPassword(this.state.email, this.state.password)\n         .then(() =>{\n            this.props.history.push('/dashboard')\n         },err=>{\n             this.setState({loginEError:'Servet error'});\n             console.log(err)\n         })\n\n\n    }\n}\n\nexport default withStyles(styles)(LoginComponent)"]},"metadata":{},"sourceType":"module"}