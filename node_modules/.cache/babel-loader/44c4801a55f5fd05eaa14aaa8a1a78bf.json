{"ast":null,"code":"var _jsxFileName = \"/Users/yokohamakaito/Desktop/chatAppFirebase/src/newChat/newChat.js\";\nimport React from 'react';\nimport { FormControl, InputLabel, Input, Button, Paper, withStyles, CssBaseline, Typography } from '@material-ui/core';\nimport styles from './styles';\n\nconst firebase = require(\"firebase\");\n\nclass NewChatComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.userTyping = (type, e) => {\n      switch (type) {\n        case 'username':\n          this.setState({\n            username: e.target.value\n          });\n          break;\n\n        case 'message':\n          this.setState({\n            message: e.target.value\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.submitNewChat = async e => {\n      e.preventDefault();\n    };\n\n    this.userExists = async () => {\n      const userSnapshot = await firebase.firestore().collection('users').get();\n      const exists = userSnapshot.docs.map(_doc => _doc.data().email);\n    };\n\n    this.state = {\n      username: null,\n      message: null\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      className: classes.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 24\n      }\n    }, \"Send A Message\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.form,\n      onSubmit: e => this.submitNewChat(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"new-chat-username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }\n    }, \"Enter Your Friend's Email\"), /*#__PURE__*/React.createElement(Input, {\n      required: true,\n      className: classes.input,\n      autoFocus: true,\n      onChange: e => this.userTyping('username', e),\n      id: \"new-chat-username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"new-chat-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }\n    }, \"Enter Your Message\"))))));\n  }\n\n}\n\nexport default withStyles(styles)(NewChatComponent);","map":{"version":3,"sources":["/Users/yokohamakaito/Desktop/chatAppFirebase/src/newChat/newChat.js"],"names":["React","FormControl","InputLabel","Input","Button","Paper","withStyles","CssBaseline","Typography","styles","firebase","require","NewChatComponent","Component","constructor","userTyping","type","e","setState","username","target","value","message","submitNewChat","preventDefault","userExists","userSnapshot","firestore","collection","get","exists","docs","map","_doc","data","email","state","render","classes","props","main","paper","form","input"],"mappings":"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","sourcesContent":["  \nimport React from 'react';\nimport { FormControl, InputLabel, Input, Button, Paper, withStyles, CssBaseline, Typography } from '@material-ui/core';\nimport styles from './styles';\nconst firebase = require(\"firebase\");\n\nclass NewChatComponent extends React.Component{\n\n    constructor(){\n        super();\n        this.state = {\n            username:null,\n            message:null\n        }\n    }\n\n    render(){\n        const {classes} = this.props\n        return (\n           <main className={classes.main}>\n               <CssBaseline>\n                   <Paper className={classes.paper}>\n                       <Typography component=\"h1\" variant=\"h5\">\n                            Send A Message\n                       </Typography>\n                       <form className={classes.form} onSubmit={(e) =>this.submitNewChat(e)}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"new-chat-username\">\n                                    Enter Your Friend's Email\n                                </InputLabel>\n                                <Input required\n                                className={classes.input}\n                                autoFocus\n                                onChange={(e) =>this.userTyping('username',e)}\n                                id='new-chat-username'\n                                >\n                                </Input>\n                            </FormControl>\n                            <FormControl fullWidth> \n                                <InputLabel htmlFor=\"new-chat-message\">\n                                    Enter Your Message\n                                </InputLabel>\n                            </FormControl>\n                       </form>\n                   </Paper>\n               </CssBaseline>\n           </main>\n        )\n    }\n    userTyping = (type,e) =>{\n        switch(type) {\n            case 'username':\n                this.setState({username:e.target.value})\n             break;\n            case 'message':\n                this.setState({message:e.target.value})\n             break;\n            default:\n            break\n        }\n    }\n    submitNewChat = async(e) =>{\n        e.preventDefault();\n    }\n\n    userExists = async () =>{\n        const userSnapshot = await firebase\n         .firestore()\n         .collection('users')\n         .get();\n        \n         const exists = userSnapshot.docs\n          .map(_doc => _doc.data().email )\n    }\n}\n\nexport default withStyles(styles)(NewChatComponent);"]},"metadata":{},"sourceType":"module"}