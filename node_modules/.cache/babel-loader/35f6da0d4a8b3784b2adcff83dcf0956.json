{"ast":null,"code":"var _jsxFileName = \"/Users/yokohamakaito/Desktop/chat/src/dashboard/dashboard.js\";\nimport React from 'react';\nimport ChatList from '../chatList/chatList';\n\nconst firebase = require('firebase');\n\nclass DashbordComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.selectChat = chatIndex => {\n      console.log('Slect', chatIndex);\n    };\n\n    this.newChatBtnClicked = () => this.setState({\n      newChatFormVisible: true,\n      selectedChat: null\n    });\n\n    this.componentDidMount = () => {\n      firebase.auth().onAuthStateChanged(async _user => {\n        if (!_user) this.props.history.push('/login');else {\n          await firebase.firestore().collection('chat').where('users', 'array-contains', _user.email).onSnapshot(async res => {\n            const chats = res.docs.map(_doc => _doc.data());\n            await this.setState({\n              emaili: _user.email,\n              chats: chats\n            });\n            console.log(this.state);\n          });\n        }\n      });\n    };\n\n    this.steat = {\n      selectedChat: null,\n      newChatFormVisible: false,\n      email: null,\n      chats: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }\n    }, \"Hello world from DashbordComponent\", /*#__PURE__*/React.createElement(ChatList, {\n      history: this.props.history,\n      newChatBtnFn: this.newChatBtnClicked,\n      selectChatFn: this.selectChat,\n      chats: this.state.chats,\n      userEmail: this.state.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \" \"));\n  }\n\n}\n\nexport default DashbordComponent;","map":{"version":3,"sources":["/Users/yokohamakaito/Desktop/chat/src/dashboard/dashboard.js"],"names":["React","ChatList","firebase","require","DashbordComponent","Component","constructor","selectChat","chatIndex","console","log","newChatBtnClicked","setState","newChatFormVisible","selectedChat","componentDidMount","auth","onAuthStateChanged","_user","props","history","push","firestore","collection","where","email","onSnapshot","res","chats","docs","map","_doc","data","emaili","state","steat","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AACA,MAAMC,QAAQ,GAAEC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMC,iBAAN,SAAgCJ,KAAK,CAACK,SAAtC,CAA+C;AAE3CC,EAAAA,WAAW,GAAE;AACT;;AADS,SA2BbC,UA3Ba,GA2BCC,SAAD,IAAc;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,SAArB;AACH,KA7BY;;AAAA,SA+BbG,iBA/Ba,GA+BO,MAAK,KAAKC,QAAL,CAAc;AAACC,MAAAA,kBAAkB,EAAC,IAApB;AAA0BC,MAAAA,YAAY,EAAC;AAAvC,KAAd,CA/BZ;;AAAA,SAiCbC,iBAjCa,GAiCO,MAAK;AACrBb,MAAAA,QAAQ,CAACc,IAAT,GAAgBC,kBAAhB,CAAmC,MAAMC,KAAN,IAAc;AAC7C,YAAG,CAACA,KAAJ,EACA,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,EADA,KAEI;AACA,gBAAMnB,QAAQ,CACZoB,SADI,GAEJC,UAFI,CAEO,MAFP,EAGJC,KAHI,CAGE,OAHF,EAGY,gBAHZ,EAG+BN,KAAK,CAACO,KAHrC,EAIJC,UAJI,CAIO,MAAMC,GAAN,IAAY;AACpB,kBAAMC,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAaC,IAAI,IAAGA,IAAI,CAACC,IAAL,EAApB,CAAd;AACA,kBAAM,KAAKpB,QAAL,CAAc;AAChBqB,cAAAA,MAAM,EAACf,KAAK,CAACO,KADG;AAEhBG,cAAAA,KAAK,EAAEA;AAFS,aAAd,CAAN;AAIAnB,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKwB,KAAjB;AACH,WAXI,CAAN;AAYH;AACJ,OAjBD;AAkBH,KApDY;;AAET,SAAKC,KAAL,GAAY;AACRrB,MAAAA,YAAY,EAAC,IADL;AAERD,MAAAA,kBAAkB,EAAC,KAFX;AAGRY,MAAAA,KAAK,EAAC,IAHE;AAIRG,MAAAA,KAAK,EAAC;AAJE,KAAZ;AAOH;;AAEDQ,EAAAA,MAAM,GAAE;AACZ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAEI,oBAAC,QAAD;AACC,MAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWC,OADrB;AAEC,MAAA,YAAY,EAAE,KAAKT,iBAFpB;AAGC,MAAA,YAAY,EAAE,KAAKJ,UAHpB;AAIC,MAAA,KAAK,EAAE,KAAK2B,KAAL,CAAWN,KAJnB;AAKC,MAAA,SAAS,EAAE,KAAKM,KAAL,CAAWT,KALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CADJ;AAaK;;AA3B0C;;AAyD/C,eAAerB,iBAAf","sourcesContent":["import React from 'react';\nimport ChatList from '../chatList/chatList';\nconst firebase =require('firebase')\nclass DashbordComponent extends React.Component{\n\n    constructor(){\n        super();\n        this.steat ={\n            selectedChat:null,\n            newChatFormVisible:false,\n            email:null,\n            chats:[]\n        }\n\n    }\n\n    render(){\nreturn (\n    <div>\n        Hello world from DashbordComponent\n        <ChatList\n         history={this.props.history} \n         newChatBtnFn={this.newChatBtnClicked} \n         selectChatFn={this.selectChat}\n         chats={this.state.chats}\n         userEmail={this.state.email}\n         > </ChatList>\n    </div>\n\n)\n    }\n\n    selectChat = (chatIndex) =>{\n        console.log('Slect', chatIndex)\n    }\n\n    newChatBtnClicked = () =>this.setState({newChatFormVisible:true, selectedChat:null})\n\n    componentDidMount = () =>{\n        firebase.auth().onAuthStateChanged(async _user =>{\n            if(!_user)\n            this.props.history.push('/login')\n            else{\n                await firebase\n                 .firestore()\n                 .collection('chat')\n                 .where('users' , 'array-contains' , _user.email)\n                 .onSnapshot(async res =>{\n                     const chats = res.docs.map(_doc =>_doc.data());\n                     await this.setState({\n                         emaili:_user.email,\n                         chats: chats\n                     });\n                     console.log(this.state)\n                 })\n            }\n        })\n    }\n}\n\nexport default DashbordComponent"]},"metadata":{},"sourceType":"module"}