{"ast":null,"code":"var _jsxFileName = \"/Users/yokohamakaito/Desktop/chat/src/signup/signup.js\";\nimport React from 'react';\nimport FromControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './style';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Link } from 'react-router-dom';\n\nconst firebase = require(\"firebase\");\n\nclass SignupComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.formIsValid = () => this.state.password === this.state.passwordConfirmation;\n\n    this.userTyping = (type, e) => {\n      switch (type) {\n        case 'email':\n          this.setState({\n            email: e.target.value\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            password: e.target.value\n          });\n          break;\n\n        case 'passwordConfirmation':\n          this.setState({\n            passwordConfirmation: e.target.value\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.subimitSignup = e => {\n      e.preventDefault();\n\n      if (!this.formIsValid()) {\n        this.setState({\n          signupError: 'Passwords do not match!'\n        });\n      }\n\n      return;\n    };\n\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: 'There was an error'\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      className: classes.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"Sign Up!\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => this.subimitSignup(e),\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      fullWidth: true,\n      margin: \"nomal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htnlFor: \"sinup-email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \"Enter Youtr Email\"), /*#__PURE__*/React.createElement(Input, {\n      autoComplete: \"email\",\n      onChange: e => this.userTyping('email', e),\n      autoFoucus: true,\n      id: \"signup-email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      fullWidth: true,\n      margin: \"nomal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htnlFor: \"sinup-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, \"Create A Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      autoComplete: \"email\",\n      onChange: e => this.userTyping('password', e),\n      autoFoucus: true,\n      id: \"sinup-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      fullWidth: true,\n      margin: \"nomal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htnlFor: \"sinup-password-confirmation-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"Confirm Your Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      autoComplete: \"email\",\n      onChange: e => this.userTyping('password', e),\n      autoFoucus: true,\n      id: \"sinup-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"SUBMIT\")), this.state.signupError ? /*#__PURE__*/React.createElement(Typography, {\n      className: classes.errorText,\n      component: \"h5\",\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, this.state.signupError) : null, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h5\",\n      variant: \"h6\",\n      className: classes.hasAccountHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"Already Have An Account?\"), /*#__PURE__*/React.createElement(Link, {\n      className: classes.logInLink,\n      to: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Logi In!\"))));\n  }\n\n}\n\nexport default withStyles(styles)(SignupComponent);","map":{"version":3,"sources":["/Users/yokohamakaito/Desktop/chat/src/signup/signup.js"],"names":["React","FromControl","InputLabel","Input","Paper","withStyles","CssBaseline","Typography","Button","styles","FormControl","Link","firebase","require","SignupComponent","Component","constructor","formIsValid","state","password","passwordConfirmation","userTyping","type","e","setState","email","target","value","subimitSignup","preventDefault","signupError","render","classes","props","main","paper","form","submit","errorText","hasAccountHeader","logInLink"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AACA,MAAMC,QAAQ,GAAEC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMC,eAAN,SAA8Bd,KAAK,CAACe,SAApC,CAA6C;AAGzCC,EAAAA,WAAW,GAAE;AACT;;AADS,SA4DbC,WA5Da,GA4DA,MAAK,KAAKC,KAAL,CAAWC,QAAX,KAAwB,KAAKD,KAAL,CAAWE,oBA5DxC;;AAAA,SA8DbC,UA9Da,GA8DF,CAACC,IAAD,EAAOC,CAAP,KAAW;AAClB,cAAOD,IAAP;AACI,aAAK,OAAL;AACI,eAAKE,QAAL,CAAc;AAACC,YAAAA,KAAK,EAACF,CAAC,CAACG,MAAF,CAASC;AAAhB,WAAd;AACA;;AAEJ,aAAK,UAAL;AACI,eAAKH,QAAL,CAAc;AAACL,YAAAA,QAAQ,EAACI,CAAC,CAACG,MAAF,CAASC;AAAnB,WAAd;AACA;;AAEJ,aAAK,sBAAL;AACI,eAAKH,QAAL,CAAc;AAACJ,YAAAA,oBAAoB,EAACG,CAAC,CAACG,MAAF,CAASC;AAA/B,WAAd;AACA;;AAEA;AACA;AAdR;AAgBH,KA/EY;;AAAA,SAgFbC,aAhFa,GAgFEL,CAAD,IAAM;AAChBA,MAAAA,CAAC,CAACM,cAAF;;AACA,UAAG,CAAC,KAAKZ,WAAL,EAAJ,EAAuB;AACnB,aAAKO,QAAL,CAAc;AAACM,UAAAA,WAAW,EAAG;AAAf,SAAd;AACH;;AACD;AACH,KAtFY;;AAET,SAAKZ,KAAL,GAAW;AACPO,MAAAA,KAAK,EAAC,IADC;AAEPN,MAAAA,QAAQ,EAAC,IAFF;AAGPC,MAAAA,oBAAoB,EAAC,IAHd;AAIPU,MAAAA,WAAW,EAAC;AAJL,KAAX;AAMH;;AACDC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAW,KAAKC,KAAtB;AAGR,wBACI;AAAM,MAAA,SAAS,EAAED,OAAO,CAACE,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEF,OAAO,CAACG,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAM,MAAA,QAAQ,EAAGZ,CAAD,IAAM,KAAKK,aAAL,CAAmBL,CAAnB,CAAtB;AAA6C,MAAA,SAAS,EAAES,OAAO,CAACI,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,QAAQ,MAArB;AAAsB,MAAA,SAAS,MAA/B;AAAgC,MAAA,MAAM,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAII,oBAAC,KAAD;AAAO,MAAA,YAAY,EAAC,OAApB;AAA4B,MAAA,QAAQ,EAAGb,CAAD,IAAO,KAAKF,UAAL,CAAgB,OAAhB,EAAwBE,CAAxB,CAA7C;AAAyE,MAAA,UAAU,MAAnF;AAAoF,MAAA,EAAE,EAAC,oBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,eAQI,oBAAC,WAAD;AAAa,MAAA,QAAQ,MAArB;AAAsB,MAAA,SAAS,MAA/B;AAAgC,MAAA,MAAM,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,YAAY,EAAC,OAApC;AAA4C,MAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKF,UAAL,CAAgB,UAAhB,EAA2BE,CAA3B,CAA7D;AAA4F,MAAA,UAAU,MAAtG;AAAuG,MAAA,EAAE,EAAC,sBAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CARJ,eAeI,oBAAC,WAAD;AAAa,MAAA,QAAQ,MAArB;AAAsB,MAAA,SAAS,MAA/B;AAAgC,MAAA,MAAM,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,mCAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,YAAY,EAAC,OAApC;AAA4C,MAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKF,UAAL,CAAgB,UAAhB,EAA2BE,CAA3B,CAA7D;AAA4F,MAAA,UAAU,MAAtG;AAAuG,MAAA,EAAE,EAAC,sBAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAfJ,eAsBI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,MAA/B;AAAgC,MAAA,OAAO,EAAC,WAAxC;AAAoD,MAAA,KAAK,EAAC,SAA1D;AAAoE,MAAA,SAAS,EAAES,OAAO,CAACK,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBJ,CAJJ,EA+BQ,KAAKnB,KAAL,CAAWY,WAAX,gBACA,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEE,OAAO,CAACM,SAA/B;AAA0C,MAAA,SAAS,EAAC,IAApD;AAAyD,MAAA,OAAO,EAAC,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKpB,KAAL,CAAWY,WADhB,CADA,GAIA,IAnCR,eAqCI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAwC,MAAA,SAAS,EAAEE,OAAO,CAACO,gBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCArCJ,eAsCI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEP,OAAO,CAACQ,SAAzB;AAAoC,MAAA,EAAE,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtCJ,CADJ,CADJ,CADJ;AA8CK;;AA9DwC;;AA4F7C,eAAenC,UAAU,CAACI,MAAD,CAAV,CAAmBK,eAAnB,CAAf","sourcesContent":["import React from 'react';\nimport FromControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './style';\nimport FormControl from '@material-ui/core/FormControl';\nimport {Link} from 'react-router-dom'\nconst firebase =require(\"firebase\")\nclass SignupComponent extends React.Component{\n\n\n    constructor(){\n        super();\n        this.state={\n            email:null,\n            password:null,\n            passwordConfirmation:null,\n            signupError:'There was an error'\n        }\n    }\n    render(){\n        const {classes} =this.props\n\n     \nreturn (\n    <main className={classes.main} >\n        <CssBaseline >\n            <Paper className={classes.paper}>\n                <Typography component=\"h1\" variant='h5'>\n                    Sign Up!\n                </Typography>\n                <form onSubmit={(e) =>this.subimitSignup(e)} className={classes.form}>\n                    <FormControl required fullWidth margin='nomal'>\n                        <InputLabel htnlFor='sinup-email-input'>\n                            Enter Youtr Email\n                        </InputLabel>\n                        <Input autoComplete='email' onChange={(e) => this.userTyping('email',e)} autoFoucus id='signup-email-input'>\n                        </Input>\n                    </FormControl>\n                    <FormControl required fullWidth margin='nomal'>\n                        <InputLabel htnlFor='sinup-password-input'>\n                           Create A Password\n                        </InputLabel>\n                        <Input type='password' autoComplete='email' onChange={(e) => this.userTyping('password',e)} autoFoucus id='sinup-password-input'>\n                        </Input>\n                    </FormControl>\n                    <FormControl required fullWidth margin='nomal'>\n                        <InputLabel htnlFor='sinup-password-confirmation-input'>\n                           Confirm Your Password\n                        </InputLabel>\n                        <Input type='password' autoComplete='email' onChange={(e) => this.userTyping('password',e)} autoFoucus id='sinup-password-input'>\n                        </Input>\n                    </FormControl>\n                    <Button type='submit' fullWidth variant='contained' color=\"primary\" className={classes.submit}>\n                            SUBMIT\n                    </Button>\n                </form>\n                {\n                    this.state.signupError ?\n                    <Typography className={classes.errorText} component='h5' variant='h6' >\n                        {this.state.signupError}\n                    </Typography>:\n                    null\n                }\n                <Typography component='h5' variant='h6' className={classes.hasAccountHeader}>Already Have An Account?</Typography>\n                <Link className={classes.logInLink} to='login'>Logi In!</Link>\n            </Paper>\n        </CssBaseline>\n    </main>\n)\n    }\n    formIsValid =() =>this.state.password === this.state.passwordConfirmation;\n\n    userTyping=(type ,e)=>{\n        switch(type){\n            case 'email':\n                this.setState({email:e.target.value});\n                break;\n\n            case 'password':\n                this.setState({password:e.target.value});\n                break;\n\n            case 'passwordConfirmation':\n                this.setState({passwordConfirmation:e.target.value});\n                break;\n\n                default:\n                break;\n        }\n    }\n    subimitSignup=(e) =>{\n        e.preventDefault();\n        if(!this.formIsValid()){\n            this.setState({signupError : 'Passwords do not match!'})\n        }\n        return;\n    }\n}\n\nexport default withStyles(styles)(SignupComponent);"]},"metadata":{},"sourceType":"module"}