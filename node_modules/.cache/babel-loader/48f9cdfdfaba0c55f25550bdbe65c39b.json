{"ast":null,"code":"var _jsxFileName = \"/Users/yokohamakaito/Desktop/chat/src/chatList/chatList.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styles from \"./style\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport NotificationImportant from \"@material-ui/icons/NotificationImportant\";\n\nclass ChatListaComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.newChat = () => {\n      console.log(\"new chat click\");\n    };\n\n    this.selectChat = index => {\n      this.props.selectChatFn(index);\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n\n    if (this.props.chats.length > 0) {\n      return /*#__PURE__*/React.createElement(\"main\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        color: \"primary\",\n        className: classes.newChatBtn,\n        onClick: this.newChat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, \"New Message\"), /*#__PURE__*/React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, this.props.chats.map((_chat, _index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: _index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(ListItem, {\n          onClick: () => this.selectChat(_index),\n          className: classes.listItem,\n          selected: this.props.selectChatIndex === _index,\n          alignItems: \"flex-start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Avatar, {\n          alt: \"Remy Sharp\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 23\n          }\n        }, _chat.users.filter(_user => _user !== this.props.userEmail)[0].split(\"\")[1])), /*#__PURE__*/React.createElement(ListItemText, {\n          primary: _chat.users.filter(_user => _user !== this.props.userEmail)[0],\n          secondary: /*#__PURE__*/React.createElement(Typography, {\n            component: \"span\",\n            color: \"textPrimary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }\n          }, _chat.messages[_chat.messages.length - 1].message.substring(0, 30)),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(Divider, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }\n        }));\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"main\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        color: \"primary\",\n        onClick: this.newChat,\n        className: classes.newChatBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, \"New Message\"), /*#__PURE__*/React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n}\n\nexport default withStyles(styles)(ChatListaComponent);","map":{"version":3,"sources":["/Users/yokohamakaito/Desktop/chat/src/chatList/chatList.js"],"names":["React","withStyles","List","ListItem","ListItemText","ListItemAvatar","Avatar","Typography","styles","Divider","Button","ListItemIcon","NotificationImportant","ChatListaComponent","Component","newChat","console","log","selectChat","index","props","selectChatFn","render","classes","chats","length","root","newChatBtn","map","_chat","_index","listItem","selectChatIndex","users","filter","_user","userEmail","split","messages","message","substring"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styles from \"./style\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport NotificationImportant from \"@material-ui/icons/NotificationImportant\";\n\nclass ChatListaComponent extends React.Component {\n  render() {\n    const { classes } = this.props;\n    if (this.props.chats.length > 0) {\n      return (\n        <main className={classes.root}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            className={classes.newChatBtn}\n            onClick={this.newChat}\n          >\n              New Message\n          </Button>\n          <List>\n            {this.props.chats.map((_chat, _index) => {\n              return (\n                <div key={_index}>\n                  <ListItem\n                    onClick={() => this.selectChat(_index)}\n                    className={classes.listItem}\n                    selected={this.props.selectChatIndex === _index}\n                    alignItems=\"flex-start\"\n                  >\n                    <ListItemAvatar>\n                      <Avatar alt=\"Remy Sharp\">\n                        {\n                          _chat.users\n                            .filter(_user => _user !== this.props.userEmail)[0]\n                            .split(\"\")[1]\n                        }\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        _chat.users.filter(\n                          _user => _user !== this.props.userEmail\n                        )[0]\n                      }\n                      secondary={\n                        <Typography component=\"span\" color=\"textPrimary\">\n                          {_chat.messages[\n                            _chat.messages.length - 1\n                          ].message.substring(0, 30)}\n                        </Typography>\n                      }\n                    ></ListItemText>\n                  </ListItem>\n                  <Divider></Divider>\n                </div>\n              );\n            })}\n          </List>\n        </main>\n      );\n    }else{\n        return(\n            <main className={classes.root}>\n                <Button variant='contained'\n                    fullWidth\n                    color='primary'\n                    onClick={this.newChat}\n                    className={classes.newChatBtn}>\n                        New Message\n                    </Button>\n                    <List></List>\n            </main>\n        )\n    }\n  }\n  newChat = () => {\n    console.log(\"new chat click\");\n  };\n  selectChat = index => {\n    this.props.selectChatFn(index)\n  };\n}\nexport default withStyles(styles)(ChatListaComponent);\n"]},"metadata":{},"sourceType":"module"}